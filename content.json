{"pages":[],"posts":[{"title":"Numpy初级","text":"NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。123456import numpy as npl = [[1,2,3],[2,3,4]]# 列表转化成矩阵array = np.array(l)print(array) [[1 2 3] [2 3 4]] numpy的几种属性123456# 维度print('number of dim:',array.ndim)# 行数和列数print('shape :',array.shape) # 元素个数print('size:',array.size) number of dim: 2 shape : (2, 3) size: 6 创建array12a = np.array([2,3,4],dtype = np.int)print(a,a.dtype) [2 3 4] int64 123# 创建全0数组a = np.zeros((3,4),dtype = np.int16)print(a) [[0 0 0 0] [0 0 0 0] [0 0 0 0]] 123# 创建全1数组a = np.ones((3,4),dtype = np.int64)print(a) [[1 1 1 1] [1 1 1 1] [1 1 1 1]] 123# 创建全空数组a = np.empty((3,4),dtype = np.float)print(a) [[-1.49166815e-154 -1.49166815e-154 4.27255699e+180 6.12033286e+257] [ 3.83819517e+151 9.77368093e+165 1.03927302e-042 5.24049485e+174] [ 4.27796595e-033 5.81088333e+294 -1.49166815e-154 8.38743761e-309]] 123# 创建连续数组a = np.arange(1,13).reshape(3,4)print(a) [[ 1 2 3 4] [ 5 6 7 8] [ 9 10 11 12]] 123# 生成线段a = np.linspace(1,10,6).reshape(2,3)print(a) [[ 1. 2.8 4.6] [ 6.4 8.2 10. ]] 基础运算基本运算1数组运算12a = np.array([10,20,30,40])b = np.arange(4) 1a-b array([10, 19, 28, 37]) 1b**2 array([0, 1, 4, 9]) 1np.sin(a) array([-0.54402111, 0.91294525, -0.98803162, 0.74511316]) 1b&lt;3 array([ True, True, True, False]) 矩阵运算1234a = np.array([[1,2],[3,4]])b = np.arange(4).reshape(2,2)print(a)print(b) [[1 2] [3 4]] [[0 1] [2 3]] 1234# 对应元素相乘print(a*b)# 矩阵乘法print(np.dot(a,b)) [[ 0 2] [ 6 12]] [[ 4 7] [ 8 15]] 123456a = np.random.random((2,4))print(a)# axis=1时每行分别计算，axis=0时每列分别计算print('sum =',np.sum(a,axis=1))print('min =',np.min(a,axis=0))print('max =',np.max(a)) [[0.31357817 0.09926399 0.57284534 0.9692283 ] [0.86206853 0.94729865 0.80886452 0.01849844]] sum = [1.9549158 2.63673014] min = [0.31357817 0.09926399 0.57284534 0.01849844] max = 0.9692282997410551 基本运算212A = np.arange(2,14).reshape(3,4)print(A) [[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]] 12# 最小（大）值索引A.argmax() 11 1234# 平均值print(A.mean())# 对列求平均print(A.mean(axis=0)) 7.5 [6. 7. 8. 9.] 12# 中位数np.median(A) 7.5 12# 累加print(np.cumsum(A)) [ 2 5 9 14 20 27 35 44 54 65 77 90] 12# 累差print(np.diff(A)) [[1 1 1] [1 1 1] [1 1 1]] 12# 排序print(np.sort(A)) [[ 2 3 4 5] [ 6 7 8 9] [10 11 12 13]] 12# 转置print(np.transpose(A)) [[ 2 6 10] [ 3 7 11] [ 4 8 12] [ 5 9 13]] 12# A*ATprint(np.dot(A,A.T)) [[ 54 110 166] [110 230 350] [166 350 534]] 12# 滤波print(np.clip(A,5,9)) [[5 5 5 5] [6 7 8 9] [9 9 9 9]] 12# 铺平print(A.flatten()) [ 2 3 4 5 6 7 8 9 10 11 12 13] numpy索引12A = np.arange(3,15).reshape(3,4)print(A) [[ 3 4 5 6] [ 7 8 9 10] [11 12 13 14]] 12A[1,1]#A[1][1] 8 array合并1234A = np.array([1,1,1])B = np.array([2,2,2])np.vstack((A,B)) array([[1, 1, 1], [2, 2, 2]]) 1np.hstack((A,B)) array([1, 1, 1, 2, 2, 2]) array分割12A = np.arange(12).reshape(3,4)print(A) [[ 0 1 2 3] [ 4 5 6 7] [ 8 9 10 11]] 12345np.split(A,3)# 横向分割# np.vsplit(A,3)# 纵向分割# np.hsplit(A,2) [array([[0, 1, 2, 3]]), array([[4, 5, 6, 7]]), array([[ 8, 9, 10, 11]])] 12# 不等量分割np.array_split(A,3,axis=1) [array([[0, 1], [4, 5], [8, 9]]), array([[ 2], [ 6], [10]]), array([[ 3], [ 7], [11]])] copy123a = np.array([1,2])# b.copy()没有关联性，为浅拷贝a is b.copy() False","link":"/2019/03/02/numpy/"},{"title":"Matplotlib","text":"12import matplotlib.pyplot as pltimport numpy as np 123x = np.linspace(1,10)y1 = 2*x + 1y2 = x**2 12345678910111213141516171819202122232425262728293031plt.figure(num = 3, figsize=(8,5))# x,y的标题plt.xlabel('$x$');plt.ylabel('$y$')plt.yticks([0,50,100], ['$bad$','$normal$','$good$'])# gca = get current axisax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')ax.xaxis.set_ticks_position('bottom')ax.yaxis.set_ticks_position('left')# ax.spines['bottom'].set_position(('data',0))# ax.spines['left'].set_position(('data',0))l1, = plt.plot(x,y2,label = '$up$')l2, = plt.plot(x,y1,color='red',linewidth=1.0,linestyle='--',label='$down$')plt.legend(handles=[l1,l2],loc='best')# 注解x0 = 6y0 = x0**2plt.scatter(x0,y0,s=20) # 展示点plt.plot([x0,x0],[y0,0],'k--',lw=1)plt.annotate(r'$2x+1=%s$' % y0,xy=(x0,y0),xycoords='data',xytext=(8,30), arrowprops=dict(arrowstyle='-&gt;',connectionstyle='arc3,rad=.2'),color='pink')plt.text(2,50,r'$This\\ is\\ some\\ text.\\ \\mu\\ \\sigma_i\\ \\alpha_t$',fontdict={'size':12,'color':'red'})plt.show() 1234def f(x,y): return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)def z(x,y): return (x**2 + y**2) 123456789101112n = 256x = np.linspace(-3,3,n)y = np.linspace(-3,3,n)X,Y = np.meshgrid(x,y)plt.contourf(X,Y,f(X,Y),7,alpha=0.5,cmap=plt.cm.cool)C = plt.contour(X,Y,f(X,Y),7,colors='black')plt.clabel(C,inline=True,)plt.xticks(())plt.yticks(())plt.show() 1234a = np.random.normal(0,1,100).reshape((10,10))plt.imshow(a,interpolation='nearest')plt.colorbar(shrink=0.9)plt.show &lt;function matplotlib.pyplot.show(*args, **kw)&gt; 1from mpl_toolkits.mplot3d import Axes3D 12345678910fig = plt.figure()ax = Axes3D(fig)X = np.arange(-4,4,0.25)Y = np.arange(-4,4,0.25)X,Y = np.meshgrid(X,Y)R = np.sqrt(X**2+Y**2)ax.plot_surface(X,Y,R,cmap='rainbow')ax.contourf(X,Y,R,zdir='z',offset=0,cmap='rainbow')plt.show() 12345678910plt.figure()plt.subplot(2,3,4)plt.plot(np.arange(1,100))plt.subplot(2,3,5)plt.plot(np.arange(1,20)**2)plt.subplot(2,1,1)plt.plot(np.random.normal(0,1,100))plt.subplot(2,3,6)plt.plot(np.array(np.sin(np.arange(0,10,0.1))))plt.show() 1import matplotlib.gridspec as gridspec 1234567891011# plt.figure()# ax1 = plt.subplot2grid((3,3),(0,0),colspan=3,rowspan=1)# ax1.plot(np.random.normal(0,1,100))# ax1.set_title('time')# ax2 = plt.subplot2grid((3,3),(1,0),colspan=2,rowspan=1)# ax2 = plt.subplot2grid((3,3),(1,2),colspan=1,rowspan=2)# ax2 = plt.subplot2grid((3,3),(2,0),colspan=1,rowspan=1)# ax2 = plt.subplot2grid((3,3),(2,1),colspan=1,rowspan=1)# plt.show() 1234567# plt.figure()# gs = gridspec.GridSpec(3,3)# ax1 = plt.subplot(gs[0,:])# ax2 = plt.subplot(gs[1,:2])# ax3 = plt.subplot(gs[1:,2])# ax4 = plt.subplot(gs[-1,0])# ax5 = plt.subplot(gs[-1,1]) 123456789101112x = np.arange(0,50)y1 = np.random.normal(0,1,50)y2 = np.random.normal(1,2,50)fig,ax1 = plt.subplots()ax2 = ax1.twinx()ax1.plot(x,y1,'g-')ax2.plot(x,-y2,'b-')ax1.set_xlabel('X data')ax1.set_ylabel('Y1',color='g')ax2.set_ylabel('Y2',color='b')plt.show() 1from scipy.stats import t 12345x = np.arange(-5,5,0.1)plt.figure()plt.plot(x,t.pdf(x,2))plt.plot(x,t.pdf(x,10))plt.show() 12","link":"/2019/03/26/matplotlib/"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[]}